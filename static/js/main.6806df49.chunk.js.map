{"version":3,"sources":["components/Header.js","components/Transcript/FormTab.js","components/Transcript/HeroContent.js","components/Gene/GeneForm.js","components/shared/Progress.js","components/shared/ResultList.js","helpers/geneHelper.js","services/api.js","components/Gene/Gene.js","components/Hgvs/HgvsForm.js","helpers/hgvsHelper.js","components/Hgvs/Hgvs.js","components/Transcript/TranscriptForm.js","components/App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","appBar","background","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","Typography_default","variant","color","FormTab","Grid_default","item","md","Paper_default","Tabs_default","value","this","selectedTask","onChange","selectTask","indicatorColor","textColor","fullWidth","Tab_default","label","Component","theme","heroContent","maxWidth","margin","padding","concat","spacing","unit","_ref","align","gutterBottom","component","GeneForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateGeneForm","state","geneFormChanged","e","persist","setState","defineProperty","target","name","geneSymbol","sequencePosition","aminoAcid","xs","container","TextField_default","id","textField","type","textFieldLast","width","Progress","justify","alignItems","CircularProgress_default","progress","size","loadingText","ResultList","transcripts","Fragment","Table_default","style","display","length","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","transcript","key","scope","href","rel","molecule","version","index_es","isGeneFormValid","sendGetRequest","url","cancel","axios","CancelToken","source","get","cancelToken","token","getRequestCreator","getRequestDebounced","AwesomeDebouncePromise","hgvsApiRequest","_ref2","asyncToGenerator","regenerator_default","mark","_callee","stableID","sequenceType","proteinSequenceURL","request","proteinTranscripts","wrap","_context","prev","next","process","replace","sent","data","abrupt","filter","seq","t0","stop","_x","apply","arguments","geneApiRequest","_ref4","_callee2","_ref3","symbolTranscriptsEndpointURL","geneInfo","_context2","toUpperCase","isCancel","console","error","message","_x2","_x3","Gene","processGene","geneFormData","isLoading","then","Gene_GeneForm","shared_Progress","shared_ResultList","HgvsForm","hgvsNotationChanged","hgvsNotation","updateHgvsNotation","aminoAcidCodes","Ala","Cys","Asp","Glu","Phe","Gly","His","Ile","Lys","Leu","Met","Asn","Pro","Gln","Arg","Ser","Thr","Val","Trp","Tyr","isHgvsNotationValid","RegExp","stableIDRegex","test","serialiseHgvsNotation","split","prefix","substituiton","match","p","g","c","Hgvs","processHgvs","serialisedHgvsNotation","newHgvsNotation","Hgvs_HgvsForm","TranscriptForm","changeTask","index","Transcript_HeroContent","PROTEIN_SEQUENCE_ENDPOINT_URL","formHolder","Transcript_FormTab","components_Gene_Gene","components_Hgvs_Hgvs","backgroundColor","palette","paper","marginTop","minHeight","boxShadow","flexWrap","App","components_Header","layout","Transcript_TranscriptForm","_layout","marginLeft","marginRight","breakpoints","up","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","dotenv","ReactDOM","render","CssBaseline_default","src_components_App","document","querySelector","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6806df49.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  appBar :{\n    background: '#000'\n  }\n};\n\nfunction Header(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\n            Ensembl Genome Browser\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nclass FormTab extends Component {\n  render() {\n    return (\n      <Grid item md={12}>\n        <Paper>\n          <Tabs\n            value={this.props.selectedTask}\n            onChange={this.props.selectTask}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            fullWidth\n          >\n            <Tab label=\"Transcripts by Gene\" />\n            <Tab label=\"Transcripts by HGVS\" />\n          </Tabs>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default FormTab;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  heroContent: {\n    maxWidth: 600,\n    margin: \"0 auto\",\n    padding: `${theme.spacing.unit * 4}px 0 ${theme.spacing.unit * 6}px`\n  }\n});\n\nconst HeroContent = ({ classes }) => (\n  <Grid className={classes.heroContent}>\n    <Typography\n      variant=\"display3\"\n      align=\"center\"\n      color=\"textPrimary\"\n      gutterBottom\n    >\n      Transcripts\n    </Typography>\n    <Typography\n      variant=\"title\"\n      align=\"center\"\n      color=\"textSecondary\"\n      component=\"p\"\n    >\n      Get all transcripts from a gene with the given amino acid at the specified\n      position.\n    </Typography>\n  </Grid>\n);\n\nHeroContent.propTypes = {\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(HeroContent);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = () => ({\n  textField: {\n    width: \"100%\"\n  },\n  textFieldLast: {\n    width: \"100%\"\n  }\n});\n\nclass GeneForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      geneSymbol: \"\",\n      sequencePosition: \"\",\n      aminoAcid: \"\"\n    };\n  }\n\n  updateGeneForm = () => {\n    this.props.updateGeneForm(this.state);\n  };\n\n  geneFormChanged = e => {\n    e.persist();\n\n    this.setState({ [e.target.name]: e.target.value }, () => {\n      this.updateGeneForm();\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid item xs={12} md={12}>\n        <Grid container spacing={16}>\n          <Grid item md={4} xs={12}>\n            <TextField\n              id=\"geneSymbol\"\n              label=\"Gene Symbol\"\n              onChange={this.geneFormChanged}\n              className={classes.textField}\n              margin=\"normal\"\n              name=\"geneSymbol\"\n            />\n          </Grid>\n          <Grid item md={4} xs={12}>\n            <TextField\n              id=\"sequencePosition\"\n              label=\"Sequence Position\"\n              type=\"number\"\n              onChange={this.geneFormChanged}\n              className={classes.textField}\n              margin=\"normal\"\n              name=\"sequencePosition\"\n            />\n          </Grid>\n          <Grid item md={4} xs={12}>\n            <TextField\n              id=\"aminoAcid\"\n              label=\"Amino Acid\"\n              onChange={this.geneFormChanged}\n              className={classes.textFieldLast}\n              margin=\"normal\"\n              name=\"aminoAcid\"\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(GeneForm);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass Progress extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <CircularProgress className={classes.progress} size={50} />\n        <Grid>{this.props.loadingText}</Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Progress);\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Grid } from \"@material-ui/core\";\n\nconst ResultList = ({ transcripts }) => (\n  <React.Fragment>\n    <Table style={{ display: transcripts.length ? \"\" : \"none\" }}>\n      <TableHead>\n        <TableRow>\n          <TableCell>ID</TableCell>\n          <TableCell>Molecule</TableCell>\n          <TableCell>Version</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {transcripts.map(transcript => {\n          return (\n            <TableRow key={transcript.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                <a\n                  href={\"http://www.ensembl.org/id/\" + transcript.id}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {transcript.id}\n                </a>\n              </TableCell>\n              <TableCell>{transcript.molecule}</TableCell>\n              <TableCell>{transcript.version}</TableCell>\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n\n    <Grid\n      container\n      style={{\n        display: transcripts.length ? \"none\" : \"\"\n      }}\n    >\n      No results found.\n    </Grid>\n  </React.Fragment>\n);\n\nexport default ResultList;\n","export const isGeneFormValid = ({\n  geneSymbol,\n  sequencePosition,\n  aminoAcid\n}) => {\n  // MAke sure the required data is not empty\n  if (geneSymbol === \"\" || sequencePosition === \"\" || aminoAcid === \"\") {\n    return false;\n  }\n\n  return true;\n};\n","import axios from \"axios\";\nimport AwesomeDebouncePromise from \"awesome-debounce-promise\";\n\nconst getRequestCreator = () => {\n  let call;\n  return url => {\n    // Cancel the previous request\n    if (call) {\n      call.cancel();\n    }\n    call = axios.CancelToken.source();\n    return axios.get(url, {\n      cancelToken: call.token\n    });\n  };\n};\nconst sendGetRequest = getRequestCreator();\nconst getRequestDebounced = AwesomeDebouncePromise(sendGetRequest, 500);\n\nexport const hgvsApiRequest = async ({\n  stableID,\n  sequenceType,\n  position,\n  aminoAcid,\n  source // TODO: cancel request\n}) => {\n  try {\n    const proteinSequenceURL = process.env.REACT_APP_SEQUENCE_ENDPOINT_URL.replace(\n      \":id\",\n      stableID\n    ).replace(\":type\", sequenceType);\n\n    // Get the actual amino acid for the given position\n    const request = await getRequestDebounced(proteinSequenceURL, 500);\n    const proteinTranscripts = request.data;\n\n    return proteinTranscripts.filter(\n      item => item.seq[position - 1] === aminoAcid\n    );\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const geneApiRequest = async (\n  { geneSymbol, sequencePosition, aminoAcid },\n  source\n) => {\n  // Get the transcripts\n  const symbolTranscriptsEndpointURL = process.env.REACT_APP_SYMBOL_TRANSCRIPTS_ENDPOINT_URL.replace(\n    \":symbol\",\n    geneSymbol\n  );\n\n  try {\n    let request = await getRequestDebounced(symbolTranscriptsEndpointURL, 500);\n    const geneInfo = request.data;\n\n    // Get the endpoint URL from env\n    let proteinSequenceURL = process.env.REACT_APP_SEQUENCE_ENDPOINT_URL.replace(\n      \":id\",\n      geneInfo.id\n    ).replace(\":type\", \"protein\");\n\n    // Get the actual amino acid for the given position\n    request = await getRequestDebounced(proteinSequenceURL, 500);\n    const proteinTranscripts = request.data;\n\n    aminoAcid = aminoAcid.toUpperCase();\n    // Check if the actual amino acid value matches with the one user has entered\n    return proteinTranscripts.filter(\n      transcript => transcript.seq[sequencePosition - 1] === aminoAcid\n    );\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      console.error(`Cancelling previous request: ${error.message}`);\n    }\n    return [];\n  }\n};\n","import React, { Component } from \"react\";\nimport GeneForm from \"./GeneForm\";\nimport Progress from \"components/shared/Progress\";\nimport ResultList from \"components/shared/ResultList\";\nimport { Grid } from \"@material-ui/core\";\nimport { isGeneFormValid } from \"helpers/geneHelper\";\nimport { geneApiRequest } from \"services/api\";\n\nclass Gene extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      transcripts: []\n    };\n  }\n\n  processGene = geneFormData => {\n    if (!isGeneFormValid(geneFormData)) {\n      this.setState({ transcripts: [] });\n      return;\n    }\n\n    this.setState({ isLoading: true });\n\n    const result = geneApiRequest(geneFormData);\n\n    result.then(value => {\n      this.setState({ transcripts: value, isLoading: false });\n    });\n  };\n\n  updateGeneForm = geneFormData => {\n    this.processGene(geneFormData);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <GeneForm updateGeneForm={this.updateGeneForm} />\n\n        {this.state.isLoading && (\n          <Progress loadingText=\"Loading Transcripts...\" />\n        )}\n\n        <Grid item xs={12} md={12}>\n          {!this.state.isLoading && (\n            <ResultList transcripts={this.state.transcripts} />\n          )}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Gene;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = () => ({\n  textField: {\n    width: \"100%\"\n  },\n  textFieldLast: {\n    width: \"100%\"\n  }\n});\n\nclass HgvsForm extends Component {\n  hgvsNotationChanged = e => {\n    e.persist();\n    const hgvsNotation = e.target.value;\n    this.props.updateHgvsNotation(hgvsNotation);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container>\n        <Grid item xs={12} md={12}>\n          <TextField\n            id=\"hgvsNotation\"\n            label=\"HGVS Notation\"\n            onChange={this.hgvsNotationChanged}\n            className={classes.textFieldLast}\n            margin=\"normal\"\n            name=\"hgvsNotation\"\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(HgvsForm);\n","const aminoAcidCodes = {\n  Ala: \"A\",\n  Cys: \"C\",\n  Asp: \"D\",\n  Glu: \"E\",\n  Phe: \"F\",\n  Gly: \"G\",\n  His: \"H\",\n  Ile: \"I\",\n  Lys: \"K\",\n  Leu: \"L\",\n  Met: \"M\",\n  Asn: \"N\",\n  Pro: \"P\",\n  Gln: \"Q\",\n  Arg: \"R\",\n  Ser: \"S\",\n  Thr: \"T\",\n  Val: \"V\",\n  Trp: \"W\",\n  Tyr: \"Y\"\n};\n\nexport const isHgvsNotationValid = hgvsNotation => {\n  const stableIDRegex = \"((?:[a-z][a-z]*[0-9]+[a-z0-9]*))\"; // Match the Stable ID\n  const versionRegex = \"(\\\\.\\\\d)?\"; // Match the optional version\n  const colonRegex = \"(:)\"; // Match the literal ':'\n  const prefixRegex = \"([gcp])\"; // Match the prefix\n  const literalDotRegex = \"(\\\\.)\"; // Match the literal '.' before the substitution\n  const aminoAcidRegex = \"((?:[a-z][a-z]+))\"; // Match the amino acid\n  const positionRegex = \"(\\\\d+)\"; // Match the position\n\n  const hgvsValidatorRegex = new RegExp(\n    stableIDRegex +\n      versionRegex +\n      colonRegex +\n      prefixRegex +\n      literalDotRegex +\n      aminoAcidRegex +\n      positionRegex +\n      aminoAcidRegex,\n    [\"i\"] // Case insensitive\n  );\n\n  return hgvsValidatorRegex.test(hgvsNotation);\n};\n\nexport const serialiseHgvsNotation = hgvsNotation => {\n  hgvsNotation = hgvsNotation.split(\":\");\n\n  let stableID = hgvsNotation[0].split(\".\")[0];\n  let prefix = hgvsNotation[1].split(\".\")[0];\n  let substituiton = hgvsNotation[1].split(\".\")[1];\n  let position = substituiton.match(/\\d+/g);\n  let aminoAcidSubstitution = substituiton.match(/[a-zA-Z]+/g);\n  let aminoAcid = aminoAcidSubstitution[0];\n\n  // Convert the 3-Letter Amino acit to Single Letter\n  aminoAcid = aminoAcidCodes[aminoAcid];\n\n  const sequenceTypes = {\n    p: \"protein\",\n    g: \"genomic\",\n    c: \"coding\"\n  };\n\n  const sequenceType = sequenceTypes[prefix];\n\n  return {\n    stableID,\n    position,\n    sequenceType,\n    aminoAcid\n  };\n};\n","import React, { Component } from \"react\";\nimport HgvsForm from \"./HgvsForm\";\nimport Progress from \"components/shared/Progress\";\nimport ResultList from \"components/shared/ResultList\";\nimport { serialiseHgvsNotation, isHgvsNotationValid } from \"helpers/hgvsHelper\";\nimport { Grid } from \"@material-ui/core\";\nimport { hgvsApiRequest } from \"services/api\";\n\nclass Hgvs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      transcripts: []\n    };\n  }\n\n  processHgvs = hgvsNotation => {\n    if (!isHgvsNotationValid(hgvsNotation)) {\n      this.setState({ transcripts: [] });\n      return;\n    }\n\n    const serialisedHgvsNotation = serialiseHgvsNotation(hgvsNotation);\n\n    this.setState({ isLoading: true });\n    const result = hgvsApiRequest(serialisedHgvsNotation);\n    result.then(value => {\n      this.setState({ transcripts: value, isLoading: false });\n    });\n  };\n\n  updateHgvsNotation = newHgvsNotation => {\n    this.processHgvs(newHgvsNotation);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <HgvsForm updateHgvsNotation={this.updateHgvsNotation} />\n\n        {this.state.isLoading && <Progress loadingText=\"Loading HGVS...\" />}\n\n        <Grid item xs={12} md={12}>\n          {!this.state.isLoading && (\n            <ResultList transcripts={this.state.transcripts} />\n          )}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Hgvs;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport FormTab from \"./FormTab\";\nimport HeroContent from \"./HeroContent\";\n\n// import {\n//   getTranscripts,\n//   hgvsProcessor,\n//   formUpdated,\n//   selectTask\n// } from \"actions/Transcripts/transcriptsActions\";\nimport Gene from \"../Gene/Gene\";\nimport Hgvs from \"../Hgvs/Hgvs\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    padding: \"20px;\",\n    marginTop: \"20px\",\n    minHeight: \"600px\",\n    boxShadow: \"0px 1px 4px #ccc\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }\n});\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTask: 0\n    };\n  }\n  changeTask = (e, index) => {\n    this.setState({ selectedTask: index });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <HeroContent />\n        {process.env.PROTEIN_SEQUENCE_ENDPOINT_URL}\n        <Grid container className={classes.formHolder}>\n          <FormTab\n            selectTask={this.changeTask}\n            selectedTask={this.state.selectedTask}\n          />\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            style={{ display: this.state.selectedTask === 0 ? \"\" : \"none\" }}\n          >\n            <Gene />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            style={{ display: this.state.selectedTask === 1 ? \"\" : \"none\" }}\n          >\n            <Hgvs />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nTranscriptForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TranscriptForm);\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport TranscriptForm from \"./Transcript/TranscriptForm\";\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(900 + theme.spacing.unit * 3 * 2)]: {\n      width: 900,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    backgroundColor: \"#ccc\"\n  }\n});\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Header />\n        <main className={classes.layout}>\n          <TranscriptForm />\n        </main>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport dotenv from 'dotenv';\n\n// Load the .env values to process.env\ndotenv.config()\n\nReactDOM.render(\n    \n    <React.Fragment>\n        <CssBaseline />\n        <App />\n    </React.Fragment>,\n\tdocument.querySelector('#root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}